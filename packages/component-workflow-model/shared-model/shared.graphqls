scalar DateTime
scalar JSON


#
# Common Model
#

interface Object {
    id: ID!
    created: DateTime!
    updated: DateTime
    restrictedFields: [String!]
}

interface WorkflowObject {
    tasks: [Task]
}


#
# Common Workflow Model: Task
#

type Task {
    id: ID
    created: DateTime
    formKey: String
    taskDefinitionKey: String
}

input CompleteTaskInput {
    taskId: ID!
    variables: [CompleteTaskVariableInput]
}

input CompleteTaskVariableInput {
    key: String
    value: JSON
}

enum CompleteTaskOutcome {
    Success
    ValidatedEmailRequired
    ValidationFailed
}


#
# Shared Model: Uploaded File
#

enum FileStorageType {
    FileStorageExternalS3
}

type File {
    id: ID!
    created: DateTime!
    updated: DateTime

    fileName: String
    fileDisplayName: String

    fileMimeType: String
    fileByteSize: Int

    storageKey: String
    storageType: FileStorageType

    order: Int
}

# Note: extended file is used when a file needs to support a type or a label

type ExtendedFile {
    id: ID!
    created: DateTime!
    updated: DateTime

    fileName: String
    fileDisplayName: String

    fileMimeType: String
    fileByteSize: Int

    storageKey: String
    storageType: FileStorageType

    order: Int
    type: String
    label: String
}


type FileUploadSignature {
    ownerType: String
    ownerId: String
    fileName: String
    mimeType: String
}

input FileUploadSignatureInput {
    ownerType: String
    ownerId: String
    fileName: String
    mimeType: String
}


input CreateFileUploadSignedUrlInput {
    signature: FileUploadSignatureInput
}

type FileUploadSignedUrlResult {
    signedUrl: String
    fileId: String
    signature: FileUploadSignature
}

input ConfirmFileUploadInput {
    signedUrl: String
    fileId: String
    signature: FileUploadSignatureInput
    fileByteSize: Int
}

extend type Mutation {
    createFileUploadSignedUrl(input:CreateFileUploadSignedUrlInput): FileUploadSignedUrlResult
    confirmFileUpload(input:ConfirmFileUploadInput) : File
}


input LinkedFileMetaDataInput {
    type: String
    label: String
}

input LinkedFileInput {
    id: ID!
    metaData: LinkedFileMetaDataInput
}



#
# Shared Model: Identity
#

enum IdentityType {
    ORCiDIdentityType
}

type Identity {
    id: ID!
    created: DateTime!
    updated: DateTime

    type: IdentityType

    identityId: String
    displayName: String
    displayAffiliation: String

    email: String
    emailIsValidated: Boolean
    emailValidationToken: String
    emailValidationTokenExpire: DateTime
    emailValidationEmailSendTimes: [DateTime]

    groups: JSON
}

extend type Subscription {
    modifiedIdentity : ID!
}