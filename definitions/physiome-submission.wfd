enum SubmissionPhase {
    Pending => "pending",
    Submitted => "submitted",
    Decision => "decision",
    Payment => "payment",
    Paid => "paid",
    Publish => "publish",
    Reject => "reject",
    Published => "published",
    Cancelled => "cancelled"
}

enum SubmissionKind {
    Original => "original",
    Retrospective => "retrospective",
    Review => "review",
    Letter => "letter"
}

mapping "DisplayedSubmissionKind" on SubmissionKind {
    Original => "Original Article",
    Retrospective => "Retrospective Article",
    Review => "Review",
    Letter => "Letter"
}


enum SupplementaryFileTypes {
    Figure => "figure",
    DataSet => "data-set"
}

mapping "DisplayedSupplementaryFileTypes" on SupplementaryFileTypes {
    Figure => "Figure",
    DataSet => "Data Set"
}


enum IUPSCommissionKind {
    Locomotion => "locomotion",
    CirculationRespiration => "circulation_and_respiration",
    EndocrineReproductionDevelopment => "endocrine_reproduction_and_development",
    Neurobiology => "Neurobiology",
    SecretionAbsorption => "secretion_and_absorption",
    MolecularCellular => "molecular_and_cellular",
    ComparativeEvolutionAdaptationEnvironment => "comparative_evolution_adaptation_environment",
    GenomicsBiodiversity => "genomics_and_biodiversity"
}

mapping "DisplayedIUPSCommissionKinds" on IUPSCommissionKind {
    Locomotion => "I. Locomotion",
    CirculationRespiration => "II. Circulation & Respiration",
    EndocrineReproductionDevelopment => "III. Endocrine, Reproduction & Development",
    Neurobiology => "IV. Neurobiology",
    SecretionAbsorption => "V. Secretion & Absorption",
    MolecularCellular => "VI. Molecular & Cellular",
    ComparativeEvolutionAdaptationEnvironment => "VII. Comparative: Evolution, Adaptation & Environment",
    GenomicsBiodiversity => "VIII. Genomics & Biodiversity"
}


instance Submission {

    processKey: "physiome-submission"
    listingAccessor: "submissions"

    model+input {
        manuscriptId: String <id-sequence:"manuscript_id">,
        submitter: Identity <owner-id, join-field:"submitterId">,
        curator: Identity <join-field:"curatorId">,

        submissionDate: DateTime <listing-sortable>,
        publishDate: DateTime <listing-sortable>,

        phase: SubmissionPhase <state, listing-filter-multiple, default:SubmissionPhase.Pending>,
        hidden: Boolean <listing-filter, default:false>,

        kind: SubmissionKind <default:SubmissionKind.Original>,
        iupsCommission: IUPSCommissionKind,
        title: String,
        abstract: String,
        primaryPapers: JSON,
        authors: JSON,
        pmrWorkspace: String,
        priceAcknowledged: Boolean,
        keywords: JSON,
        funding: JSON,

        allFilesPresent: Boolean,
        resultsMatch: Boolean,
        modelAnnotated: Boolean,
        primaryPaperExists: Boolean,
        resultsInPapersOverlap: Boolean,
        sameModelInPapers: Boolean,
        curationNotes: String,

        articleFiles: [File] <set>,
        supplementaryFiles: [File] <set, file-labels, file-types>,

        figshareArticleId: String <input:exclude>,

        paymentSessionId: String <input:exclude>,
        paymentCompleted: Boolean <input:exclude, default:false>
    }


    acl {

        fields "submit" {
    	    kind, title, abstract, primaryPapers, authors, funding,
    	    pmrWorkspace, keywords, iupsCommission,
    	    articleFiles, supplementaryFiles,
            priceAcknowledged, submissionDate
        }

        fields "read-only" {
            phase, manuscriptId
        }

        fields "curation" {
            hidden,
    	    curator,
    	    allFilesPresent, resultsMatch, modelAnnotated,
    	    primaryPaperExists, resultsInPapersOverlap, sameModelInPapers,
    	    curationNotes,
    	    publishDate, figshareArticleId
        }

        tasks "owner-submit" {
    	    "Task_DetailsSubmission"
        }

        allow <user> [create]
        allow <owner> [access:own]
        allow <administrator> [access:all]

        allow <owner> [read] on "submit"
        allow <owner> [read] on "read-only"
        allow <owner> [write] on "submit" where (phase == SubmissionPhase.Pending)
        allow <owner> [task] on "owner-submit"
        allow <owner> [destroy] where (phase == SubmissionPhase.Pending)

        allow <administrator> [write, read] on "submit"
        allow <administrator> [write, read] on "curation"
        allow <administrator> [read] on "read-only"
        allow <administrator> [create, destroy]
        allow <administrator> [task]
    }


    validations "initial-submission" {

        { kind => (hasValue(kind)), "A manuscript type is required. Please select one." }

        { title => (length(title) > 0), "A manuscript title is required. Please enter one." }

        { abstract => (length(abstract) > 0), "A manuscript abstract is required. Please enter one." }

    }


    layout "submission-editor" {

        { SelectValue => kind, label:"Manuscript Type", options:mapping("DisplayedSubmissionKind"), placeholder:"Please select a Manuscript type" }

        { TextArea => title, label:"Title", rows:2 }

        { TextArea => abstract, label:"Abstract", rows:6 }

        { ArticleCitation => primaryPapers, label:"Primary Paper" }

        { AuthorsEditor => authors, label:"Authors" }

        { SelectValue => iupsCommission, label:"Commission Type", options:mapping("DisplayedIUPSCommissionKinds"), placeholder:"Please select a Commission" }

        { KeywordsEditor => keywords, label:"Keywords", placeholder:"Enter Manuscript keywords" }

        { FundingEditor => funding, label:"Funding Acknowledgements" }

        { Text => pmrWorkspace, label:"Associated PMR Workspace" }

        { FileUploader => articleFiles, label:"Manuscript" }

        { FileUploader => supplementaryFiles, label:"Supplementary Files",
            fileLabels:true, fileTypes:mapping("DisplayedSupplementaryFileTypes") }
    }


    layout "submission-view" {

        { StaticText => kind, label:"Article Type", mapping:mapping("DisplayedSubmissionKind") }

        { StaticText => title, label:"Title" }

        { StaticText => abstract, label:"Abstract" }

        { AuthorsListing => authors, label:"Authors" }

        { ArticleCitation => primaryPapers, label:"Primary Paper", readOnly:true }

        { StaticText => iupsCommission, label:"Commission Type", mapping:mapping("DisplayedIUPSCommissionKinds") }

        { KeywordsListing => keywords, label:"Keywords" }

        { FundingListing => funding, label:"Funding Acknowledgements" }

        { StaticText => pmrWorkspace, label:"Associated PMR Workspace" }

        { FilesListing => articleFiles, label:"Manuscript Files" }

        { FilesListing => supplementaryFiles, label:"Supplementary Files" }
    }


    view "details" extend "MasterDetailEditor" {

        elements: {

            { HeaderPanel, (phase == SubmissionPhase.Payment), children:{

                { RequestPaymentBanner }

            } }

            { MasterPanel, <administrator>, children:{

                { ViewerEditorLayout, heading:"Manuscript Details", viewLabel:"View Submission", editLabel:"Edit Submission", children:{

                    { Layout, layout:"submission-view" }

                    { Layout, layout:"submission-editor" }

                } }

            } }

            { MasterPanel, <not:administrator>, children:{

                { Layout, layout:"submission-view" }

            } }

            { MasterPanel, <administrator>, (phase == SubmissionPhase.Published), heading:"Published Article", children:{

                { FishareArticleEmbed => figshareArticleId }

            } }


            { DetailPanel, children:{

                { SubmissionStatusPill => phase, label:"Submission Status" }

                { ClaimSubmission => curator, label:"Assigned Curator" }

                { StaticText => submissionDate, label:"Submission Date" }

                { StaticText => publishDate, (phase == SubmissionPhase.Published), label:"Published Date" }

                { TextArea => curationNotes, <administrator>, label:"Notes" }

                { Checkbox => hidden, <administrator>, (phase in [SubmissionPhase.Submitted, SubmissionPhase.Decision]), label:"Place submission on-hold" }
            } }

            { DetailPanel, <administrator>, (phase == SubmissionPhase.Submitted), heading:"Curation Checks", children:{

                { Checkbox => primaryPaperExists, label: "Primary paper exists",
                    help:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris." }

                { Checkbox => sameModelInPapers, label: "Same model in manuscript and primary paper",
                    help:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris." }

                { Checkbox => resultsMatch, label: "Results of of the model match the results present in primary article",
                    help:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris." }

                { Checkbox => resultsInPapersOverlap, label: "Results in manuscript and primary paper overlap",
                    help:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris." }

                { Checkbox => allFilesPresent, label: "All files are present within the model and successfully execute",
                    help:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris." }

                { Checkbox => modelAnnotated, label: "Model is fully annotated",
                    help:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris." }

            } }

            { DetailPanel, <administrator>,
                    (phase in [SubmissionPhase.Decision, SubmissionPhase.Payment, SubmissionPhase.Paid,
                        SubmissionPhase.Publish, SubmissionPhase.Reject, SubmissionPhase.Published]),
                    heading:"Curation Checks", children:{

                { Checkbox => primaryPaperExists, label: "Primary paper exists", readOnly:true }

                { Checkbox => sameModelInPapers, label: "Same model in manuscript and primary paper", readOnly:true }

                { Checkbox => resultsMatch, label: "Results of of the model match the results present in primary article", readOnly:true }

                { Checkbox => resultsInPapersOverlap, label: "Results in manuscript and primary paper overlap", readOnly:true }

                { Checkbox => allFilesPresent, label: "All files are present within the model and successfully execute", readOnly:true }

                { Checkbox => modelAnnotated, label: "Model is fully annotated", readOnly:true }
            } }

            { DetailPanel, <administrator>, (phase in [SubmissionPhase.Submitted, SubmissionPhase.Decision, SubmissionPhase.Payment, SubmissionPhase.Paid, SubmissionPhase.Reject]),
                    heading:"Decisions", children:{

                { InlineTaskForm, form:"decisions", tasks:[ "checks", "payment-decision", "payment", "publish-decision" ] }

                { ResumeRejectedSubmission, (phase == SubmissionPhase.Reject) }

            } }

        }
    }


    form "submission" extend "SideBySideHeroPanels" {

        validation: [ "initial-submission" ]

        outcomes: [
            {
                "complete" => Complete,
                state: {
                    phase: SubmissionPhase.Submitted
                },
                sequence => manuscriptId
            },

            { "save-for-later" => Save },

            {
                "cancel" => Destroy,
                state: {
                    phase: SubmissionPhase.Cancelled
                },

                confirmation:true,
                message:"Are you sure you want to cancel this submission?"
            }
        ]

        options: {
           heading: "Manuscript Submission"
        }

        elements: {

            { Panel, children:{

                { Layout, layout:"submission-editor" }

                { HeroCheckbox => priceAcknowledged, heading:"Conditions of Submission",
                    label: "I understand that there is an article processing charge (APC) of $300 USD associated with the successful acceptance of this manuscript." }

            } }

            { DecisionPanel, children:{

                { Button, outcome:"save-for-later", label:"Save for Later" }

                { Button, outcome:"cancel", label:"Cancel",
                    confirmation:"Are you sure you want to cancel this manuscript submission? The submission and any saved answers will be lost.",
                    confirmationHeading:"Cancel Manuscript Submission",
                    confirmationAffirmativeLabel: "Delete Submission", confirmationNegativeLabel: "Cancel"}

                { Button, default:true, outcome:"complete", label:"Submit" }

            } }
        }
    }


    form "decisions" {

        outcomes: [
            {
                "payment" => Complete,
                state: {
                    phase: SubmissionPhase.Payment
                }
            },
            {
                "publish" => Complete,
                state: {
                    phase: SubmissionPhase.Publish
                }
            },
            {
                "reject" => Complete,
                state: {
                    phase: SubmissionPhase.Reject
                }
            },
            {
                "checked" => Complete,
                state: {
                    phase: SubmissionPhase.Decision
                }
            },
            {
                "resume-checks" => Complete,
                state: {
                    phase: SubmissionPhase.Submitted
                }
            }
        ]

        elements: {

            { Button, (phase == SubmissionPhase.Submitted), outcome:"checked", label:"Checks Completed" }

            { Button, (phase == SubmissionPhase.Decision), outcome:"resume-checks", label:"Resume Quality Checks"}

            { Button, (phase == SubmissionPhase.Decision), outcome:"payment", label:"Approve for Payment",
                confirmation:"Are you sure you want to approve this submission for payment? The submitter will be asked to pay the article processing charge.",
                confirmationHeading:"Approve Manuscript for APC Payment", confirmationAffirmativeLabel: "Request Payment", confirmationNegativeLabel: "Cancel"}

            { Button, (phase == SubmissionPhase.Paid), outcome:"publish", label:"Publish Article",
                confirmation:"Are you sure you want to publish this manuscript submission through into figshare?", confirmationHeading:"Publish Manuscript to Figshare",
                confirmationAffirmativeLabel: "Publish Manuscript", confirmationNegativeLabel: "Cancel"}

            { Button, (phase != SubmissionPhase.Reject), outcome:"reject", label:"Reject Article",
                confirmation:"Are you sure you want to reject this manuscript submission?", confirmationHeading:"Reject Manuscript Submission",
                confirmationAffirmativeLabel: "Reject Manuscript", confirmationNegativeLabel: "Cancel" }
        }
    }

}