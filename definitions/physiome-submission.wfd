enum SubmissionPhase {
    Pending => "pending",
    Submitted => "submitted",
    Checking => "checking",
    Decision => "decision",
    Publish => "publish",
    Reject => "reject",
    Published => "published",
    Cancelled => "cancelled"
}

enum SubmissionKind {
    Original => "original",
    Retrospective => "retrospective",
    Review => "review",
    Letter => "letter"
}

mapping "DisplayedSubmissionKind" on SubmissionKind {
    Original => "Original Article",
    Retrospective => "Retrospective Article",
    Review => "Review",
    Letter => "Letter"
}


enum SupplementaryFileTypes {
    Figure => "figure",
    DataSet => "data-set"
}

mapping "DisplayedSupplementaryFileTypes" on SupplementaryFileTypes {
    Figure => "Figure",
    DataSet => "Data Set"
}


instance Submission {

    processKey: "physiome-submission"
    listingAccessor: "submissions"

    model+input {
        submitter: Identity <owner-id, join-field:"submitterId">,
        curator: Identity <join-field:"curatorId">,

        submissionDate: DateTime <listing-sortable>,
        publishDate: DateTime <listing-sortable>,

        phase: SubmissionPhase <state, listing-filter-multiple, default:SubmissionPhase.Pending>,

        kind: SubmissionKind <default:SubmissionKind.Original>,
        title: String,
        abstract: String,
        primaryPapers: JSON,
        authors: JSON,
        pmrWorkspace: String,
        priceAcknowledged: Boolean,
        keywords: JSON,
        funding: JSON,

        allFilesPresent: Boolean,
        resultsMatch: Boolean,
        modelAnnotated: Boolean,
        curationNotes: String,

        articleFiles: [File] <set>,
        supplementaryFiles: [File] <set, file-labels, file-types>,

        figshareArticleId: String
    }


    acl {

        fields "submit" {
    	    kind, title, abstract, primaryPapers, authors, pmrWorkspace, priceAcknowledged, keywords, funding, submissionDate,
    	    articleFiles, supplementaryFiles, supplementaryDataFiles
        }

        fields "phase" {
            phase
        }

        fields "curation" {
    	    kind, title, abstract, primaryPapers, authors, pmrWorkspace, priceAcknowledged, keywords, funding, submissionDate,
    	    articleFiles, supplementaryFiles, supplementaryDataFiles,
    	    curator,
    	    allFilesPresent, resultsMatch, modelAnnotated, curationNotes,
    	    publishDate, figshareArticleId
        }

        tasks "owner-submit" {
    	    "Task_DetailsSubmission"
        }

        allow <user> [create]
        allow <owner> [access:own]
        allow <administrator> [access:all]

        allow <owner> [read] on "submit"
        allow <owner> [read] on "phase"
        allow <owner> [write] on "submit" where (phase == SubmissionPhase.Pending)
        allow <owner> [task] on "owner-submit"
        allow <owner> [destroy] where (phase == SubmissionPhase.Pending)

        allow <administrator> [write, read] on "curation"
        allow <administrator> [read] on "phase"
        allow <administrator> [create, destroy]
        allow <administrator> [task]

    }


    view "details" extend "SideBySideHeroPanels" {

        elements: {

            { Panel, heading:"Article Details", children:{

                { Group, heading:"Submitted Details", children:{

                    { StaticText => title, label:"Title" }

                    { StaticText => abstract, label:"Abstract" }

                    { StaticText => pmrWorkspace, label:"Associated PMR Workspace" }

                    { FilesListing => articleFiles, label:"Article Files" }

                } }

                { Group, heading:"Additional Information", children:{

                    { SubmissionStatusPill => phase, label:"Submission Status" }

                    { StaticText => submissionDate, label:"Submission Date" }

                    { StaticText => publishDate, (phase == SubmissionPhase.Published), label:"Published Date" }

                } }

            } }


            { Panel, heading:"Actions", children:{

                { Group, (phase == SubmissionPhase.Checking), heading:"Checks", children:{

                    { InlineTaskForm, form:"checks" }

                } }

                { Group, (phase != SubmissionPhase.Checking), heading:"Checks", children:{

                    { Checkbox => allFilesPresent, label: "All files are present within the model and successfully execute", readOnly:true }

                    { Checkbox => resultsMatch, label: "Results of of the model match the results present in referenced articles", readOnly:true }

                    { Checkbox => modelAnnotated, label: "Model is fully annotated", readOnly:true }

                    { StaticText => curationNotes, label:"Notes" }

                } }

                { Group, (phase == SubmissionPhase.Checking || phase == SubmissionPhase.Decision), heading:"Decisions", children:{

                    { InlineTaskForm, form:"final-decision", tasks:[ "final-decision" ] }

                    { InlineTaskForm, (phase != SubmissionPhase.Decision), form:"reject", tasks:[ "checks" ] }

                } }

                { Group, (phase == SubmissionPhase.Published), heading:"Published", children:{

                    { FishareArticleEmbed => figshareArticleId, label:"Figshare Article" }

                } }

            } }
        }
    }


    form "submission" extend "SideBySideHeroPanels" {

        outcomes: [
            {
                "complete" => Complete,
                state: {
                    phase: SubmissionPhase.Submitted
                }
            },

            { "save-for-later" => Save },

            {
                "cancel" => Destroy,
                state: {
                    phase: SubmissionPhase.Cancelled
                },

                confirmation:true,
                message:"Are you sure you want to cancel this submission?"
            }
        ]

        options: {
           heading: "Article Submission"
        }

        elements: {

            { Panel, children:{

                { SelectValue => kind, label:"Manuscript Type", options:mapping("DisplayedSubmissionKind") }

                { TextArea => title, label:"Title", rows:2 }

                { TextArea => abstract, label:"Abstract", rows:6 }

                { ArticleCitation => primaryPapers, label:"Primary Paper" }

                { AuthorsEditor => authors, label:"Authors" }

                { FundingEditor => funding, label:"Funding Acknowledgements" }

                { Text => pmrWorkspace, label:"Associated PMR Workspace" }

                { FileUploader => articleFiles, label:"Manuscript" }

                { FileUploader => supplementaryFiles, label:"Supplementary Files",
                    fileLabels:true, fileTypes:mapping("DisplayedSupplementaryFileTypes") }

                { Checkbox => priceAcknowledged, label: "I understand that there is an article processing charge (APC) of $300 USD associated with the successful acceptance of this manuscript." }

            } }

            { DecisionPanel, children:{

                { Button, outcome:"save-for-later", label:"Save for Later" }

                { Button, outcome:"cancel", label:"Cancel" }

                { Button, default:true, outcome:"complete", label:"Submit" }

            } }
        }
    }


    form "claim" {

        outcomes: [
            {
                "claim" => Complete,
                state: {
                    phase: SubmissionPhase.Checking
                }
                identity => curator
            }
        ]

        elements: {
            { Button, default:true, outcome:"claim", label:"Assign to me" }
        }
    }


    form "checks" {

        outcomes: [
            {
                "checked" => Complete,
                state: {
                    phase: SubmissionPhase.Decision
                }
            }
        ]

        elements: {

            { Checkbox => allFilesPresent, label: "All files are present within the model and successfully execute" }

            { Checkbox => resultsMatch, label: "Results of of the model match the results present in referenced articles" }

            { Checkbox => modelAnnotated, label: "Model is fully annotated" }

            { TextArea => curationNotes, label:"Notes" }

            { Button, default:true, outcome:"checked", label:"Checks Completed" }
        }
    }


    form "reject" {

        outcomes: [
            {
                "reject" => Complete,
                state: {
                    phase: SubmissionPhase.Reject
                }
            }
        ]

        elements: {

            { Button, outcome:"reject", label:"Reject Article" }
        }
    }


    form "final-decision" {

        outcomes: [
            {
                "publish" => Complete,
                state: {
                    phase: SubmissionPhase.Publish
                }
            },
            {
                "reject" => Complete,
                state: {
                    phase: SubmissionPhase.Reject
                }
            }
        ]

        elements: {

            { Button, default:true, outcome:"publish", label:"Publish Article" }

            { Button, outcome:"reject", label:"Reject Article" }

        }
    }

}